optiontools

This module implements classes that help to manage global HydPy
options.

Module

optiontools

 implements the following members:

   Options Singleton class for global options placed in module pub.


class hydpy.core.optiontools.Options

   Bases:

   object

   Singleton class for *global* options placed in module "pub".

   Note that Most options are simple True/False or 0/1 flags.

   You can change all options in two ways.  By using the *with*
   statement, you make sure that the change is undone after leaving
   the corresponding code block (even if an error occurs):

   >>> from hydpy.pub import options
   >>> options.printprogress = 0
   >>> options.printprogress
   0
   >>> with options.printprogress(True):
   ...     print(options.printprogress)
   1
   >>> options.printprogress
   0

   Alternatively, you can change all options via simple assignements:

   >>> options.printprogress = True
   >>> options.printprogress
   1

   But then you might have to keep in mind to undo the change later:

   >>> options.printprogress
   1
   >>> options.printprogress = False
   >>> options.printprogress
   0

   checkseries = 1

      True/False flag indicating whether an error shall be raised when
      e.g. an incomplete input time series, not spanning the whole
      initialization time period, is loaded.

   ellipsis = -999

      Ellipsis points are used to shorten the string representations
      of iterable HydPy objects containing many entries.  Set a value
      to define the maximum number of entries before and behind
      ellipsis points.  Set it to zero, if no ellipsis points should
      be drawn at all.  Set it to -999 (the default value) to rely on
      the default values of the respective iterables.

   fastcython = 1

      True/False flag indicating whether Cythonization shall be
      configured in a fast but unsafe (True) or in a slow but safe
      (False) mode.  The fast mode is the default.  Setting this flag
      to False can be helpful when the implementation of new models or
      other Cython related features introduces errors that do not
      result in informative error messages.

   printprogress = 1

      True/False flag indicating whether information about the
      progress of certain processes shall be printed to the standard
      output or not. The default is *True*.

   printincolor = 1

      True/False flag indicating whether information shall be printed
      in color eventually or not. The default is *True*.

   reprcomments = 0

      True/False flag indicationg whether comments shall be included
      in string representations of some classes of the HydPy framework
      or not.  The default is *False*.

   reprdigits = -999

      Required precision of string representations of floating point
      numbers, defined as the minimum number of digits to be
      reproduced by the string representation (see function "repr_").

   skipdoctests = 0

      True/False flag indicating whether documetation tests shall be
      performed under certain situations.  Applying tests increases
      reliabilty and is thus the default.

   usecython = 1

      True/False flag indicating whether Cython models (True) or pure
      Python models (False) shall be applied if possible.  Using
      Cython models is more time efficient and thus the default.

   usedefaultvalues = 0

      True/False flag indicating whether parameters values shall be
      initialized with standard values or not.

   dirverbose = 0

      True/False flag indicationg whether the listboxes for the member
      selection of the classes of the HydPy framework should be
      complete (True) or restrictive (False).  The latter is more
      viewable and hence the default.

   warnmissingcontrolfile = 0

      True/False flag indicating whether only a warning shall be
      raised when a required control file is missing, or an exception.

   warnmissingobsfile = 1

      True/False flag indicating whether a warning shall be raised
      when a requested observation sequence demanded by a node
      instance is missing.

   warnmissingsimfile = 1

      True/False flag indicating whether a warning shall be raised
      when a requested simulation sequence demanded by a node instance
      is missing.

   warnsimulationstep = 1

      True/False flag indicating whether a warning shall be raised
      when function

      simulationstep()

       called for the first time.

   warntrim = 1

      True/False flag indicating whether a warning shall be raised
      whenever certain values needed to be trimmed due to violating
      certain boundaries. Such warnings increase safety and are thus
      the default is *True*.  However, to cope with the limited
      precision of floating point numbers only those violations beyond
      a small tolerance value are reported (see function

      trim()

      ).  Warnings with identical information are reported only once.
