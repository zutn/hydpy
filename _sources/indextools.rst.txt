indextools

This module implements tools to determine time related indices.

Module

indextools

 implements the following members:

   Indexer Handles arrays containing indexes.


class hydpy.core.indextools.Indexer

   Bases:

   object

   Handles arrays containing indexes.

   One can specify the index arrays manually, but usually they are
   determined automatically based on the

   Timegrids

    object made available through module "pub".

   monthofyear

      Month of the year index (January = 0...).

   dayofyear

      Day of the year index (the first of January = 0...).

      For reasons of consistency between leap years and non-leap
      years, assuming a daily time step, index 59 is always associated
      with the 29th of February.  Hence, it is missing in non-leap
      years:

      >>> from hydpy import pub
      >>> from hydpy import Timegrids, Timegrid
      >>> from hydpy.core.indextools import Indexer
      >>> pub.timegrids = Timegrids(Timegrid('27.02.2004',
      ...                                    '3.03.2004',
      ...                                    '1d'))
      >>> Indexer().dayofyear
      array([57, 58, 59, 60, 61])
      >>> pub.timegrids = Timegrids(Timegrid('27.02.2005',
      ...                                    '3.03.2005',
      ...                                    '1d'))
      >>> Indexer().dayofyear
      array([57, 58, 60, 61])

   timeofyear

      Time of the year index (first simulation step of each year =
      0...).

      The property

      timeofyear

       is best explained through comparing it with property

      dayofyear

      :

      Let us reconsider one of the examples of the documentation on
      property

      dayofyear

      :

      >>> from hydpy import pub
      >>> from hydpy import Timegrids, Timegrid
      >>> from hydpy.core.indextools import Indexer
      >>> pub.timegrids = Timegrids(Timegrid('27.02.2005',
      ...                                    '3.03.2005',
      ...                                    '1d'))

      Due to the simulation stepsize being one day, the index arrays
      calculated by both properties are identical:

      >>> Indexer().dayofyear
      array([57, 58, 60, 61])
      >>> Indexer().timeofyear
      array([57, 58, 60, 61])

      In the next example the step size is halved:

      >>> pub.timegrids = Timegrids(Timegrid('27.02.2005',
      ...                                    '3.03.2005',
      ...                                    '12h'))

      Now the there a generally two subsequent simulation steps
      associated with the same day:

      >>> Indexer().dayofyear
      array([57, 57, 58, 58, 60, 60, 61, 61])

      However, the *timeofyear* array gives the index of the
      respective simulation steps of the actual year:

      >>> Indexer().timeofyear
      array([114, 115, 116, 117, 120, 121, 122, 123])

      Note the gap in the returned index array due to 2005 being not a
      leap year.
